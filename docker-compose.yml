version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: ${NODE_ENV}
      APP_NAME: ${APP_NAME}
      APP_PORT: ${APP_PORT}
      APP_HOST: ${APP_HOST}
      API_PREFIX: ${API_PREFIX}
      API_VERSION: ${API_VERSION}
      APP_FALLBACK_LANGUAGE: ${APP_FALLBACK_LANGUAGE}
      APP_HEADER_LANGUAGE: ${APP_HEADER_LANGUAGE}
      HASH_SALT_ROUNDS: ${HASH_SALT_ROUNDS}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_SYNCHRONIZE: ${DATABASE_SYNCHRONIZE}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      AUTH_ACCESS_TOKEN_SECRET: ${AUTH_ACCESS_TOKEN_SECRET}
      AUTH_REFRESH_TOKEN_SECRET: ${AUTH_REFRESH_TOKEN_SECRET}
      AUTH_ACCESS_TOKEN_EXPIRES_IN: ${AUTH_ACCESS_TOKEN_EXPIRES_IN}
      AUTH_REFRESH_TOKEN_EXPIRES_IN: ${AUTH_REFRESH_TOKEN_EXPIRES_IN}
      FILE_DRIVER: ${FILE_DRIVER}
      FILE_SIZE: ${FILE_SIZE}
    depends_on:
      - postgres
      - redis
    restart: always

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
